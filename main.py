# # # 1) При помощи цикла for выведите чётные числа от 2 до 10.
# #
# # for a in range(2, 11):
# #     if a % 2 == 0:
# #         print(a)
# ##################################################
#
# # # 2) Напишите цикл, который предлагает input ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
# # # Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
# # # Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.
#
# # while True:
# #     number = int(input("выведите число большее 100: "))
# #     if number >= 100:
# #         break
#
# ##################################################
#
# # 3) Даны два целых числа A и В. Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.
# # входные данные
# # 5 9
# # выходные данные
# # 5 6 7 8 9
#
# # a = int(input("A = "))
# # b = int(input("B = "))
# # while a < b:
# #     print(a)
# #     a+=1
#
# ##################################################
#
# # 4) Вывести на экран ряд натуральных чисел от минимума до максимума с шагом. Например,
# # если минимум 10, максимум 35, шаг 5, то вывод должен быть таким: 10 15 20 25 30 35.
# # Минимум, максимум и шаг указываются пользователем (считываются с клавиатуры).
#
# # #
# # min = int(input("min: "))
# # max = int(input("max: "))
# # step = int(input("step: "))
# # for result in range(min, max, step):
# #     print(result)
#
# ##################################################
#
# # # 5) Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# # # Например, если введено число 3486, то надо вывести число 6843.
# #
# # number = int(input("Number: "))
# # birlik = number%10
# # onliq = int(((number%100)/10))
# # juzlik = int((number/100)%10)
# # minliq = int((number/100)/10)
# # print(str(birlik)+str(onliq)+str(juzlik)+str(minliq))
#
# ##################################################
#
# # 6) Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# #  Числа и знак операции вводятся пользователем.
# #  После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# #  Завершение программы должно выполняться при вводе символа ‘0’ в качестве знака операции.
# #  Если пользователь вводит неверный знак (не ‘0’, ‘+’, ‘-‘, ‘*’, ‘/’),
# #  то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# #  Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
# #
# # while True:
# #     a = (input("A = "))
# #     b = (input("B = "))
# #     operation = input("Operatsiyani kiritin: ")
# #     if operation == '+':
# #         print(int(a)+int(b))
# #     elif operation == '-':
# #         print(int(a)-int(b))
# #     elif operation == '*':
# #         print(int(a)*int(b))
# #     elif operation == '/':
# #         print(int(a)/int(b))
# #     elif operation == '0':
# #         break
# #     else:
# #         print("Siz Qate Kiritdiniz!")
#
# ##################################################
#
# # # 7) Посчитать четные и нечетные цифры введенного натурального числа.
# # # Например, если введено число 34560,
# # # то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
# #
# # numbers = input("Number = ")
# # taqSan = ""
# # jupSan = ""
# #
# # for number in numbers:
# #     if int(number)%2==0:
# #         jupSan += f"{number}, "
# #     else:
# #         taqSan += f"{number}, "
# # print(f"Jup San : {jupSan}\nTaq San : {taqSan}")
# #
#
# ##################################################
#
# Home Work 2
#


# # 1) С клавиатуры вводится натуральное число. Найти его наибольшую цифру.
# # Например, введено число 764580. Наибольшая цифра в нем 8.
#
# numbers = str(input("Number = "))
# print(max(numbers))

# ##################################################

# 2) Вывести на экран ряд натуральных чисел от минимума до максимума с шагом. Например, если минимум 10,
#  максимум 35, шаг 5, то вывод должен быть таким: 10 15 20 25 30 35. Минимум, максимум и шаг указываются пользователем
# (считываются с клавиатуры).

# min = int(input("min: "))
# max = int(input("max: "))
# step = int(input("step: "))
# for result in range(min, max, step):
#     print(result)

# ###################################################

# 3) Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

# # number = int(input("Number: "))
# # birlik = number%10
# # onliq = int(((number%100)/10))
# # juzlik = int((number/100)%10)
# # minliq = int((number/100)/10)
# # print(str(birlik)+str(onliq)+str(juzlik)+str(minliq))

# ##################################################

# 4) Найти сумму и произведение цифр, введенного натурального числа. Например, если введено число 325,
# то сумма его цифр равна 10 (3+2+5), а произведение 30 (3*2*5).
#
# number = int(input("Number: "))
# birlik = number%10
# onliq = int(((number%100)/10))
# juzlik = int((number/100)%10)
# minliq = int((number/100)/10)
# print(minliq+juzlik+onliq+birlik)
# print(minliq*juzlik*onliq*birlik)

# ##################################################

# 5) Вычислить факториал введенного числа
#
# number = int(input("Number = "))
# faktorial = 0
# while number >= 0:
#     faktorial += number
#     number -= 1
#
# print(faktorial)

# ##################################################


# 6) Найти сумму n элементов следующего ряда чисел:
# 1 -0.5 0.25 -0.125 ...
# Количество элементов (n) вводится с клавиатурыa

# n = (input("N = "))
# print(len(n))

# 7) Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560,  то у него 3
# четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

# # numbers = input("Number = ")
# # taqSan = ""
# # jupSan = ""
# #
# # for number in numbers:
# #     if int(number)%2==0:
# #         jupSan += f"{number}, "
# #     else:
# #         taqSan += f"{number}, "
# # print(f"Jup San : {jupSan}\nTaq San : {taqSan}")

# # # 8) Вывести на экран столько элементов ряда Фибоначчи, сколько указал пользователь. Например, если на ввод поступило число 6,
# # # то вывод должен содержать шесть первых чисел ряда Фибоначчи: 1 2 3 5 8 13.
# #
# n = int(input("N = "))
#
# for a in range(n):
#     if a > 0:
#         a += 1
#     for b in range(n):
#         b += 1
#         print(a+b, end='')






